name: Deploy Preview

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: preview
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository }}/t7lab-website:${{ github.head_ref }} .
          docker push ghcr.io/${{ github.repository }}/t7lab-website:${{ github.head_ref }}

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          host-keys: ${{ vars.SSH_HOST }}

      - name: Add Host to known_hosts
        run: |
          ssh-keyscan -H ${{ vars.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy Docker Container on Hetzner
        run: |
          ssh root@${{ vars.SSH_HOST }} "docker login ghcr.io -u '${{ github.actor }}' --password '${{ secrets.GITHUB_TOKEN }}' && \
          docker stop preview-${{ github.head_ref }} || true && \
          docker rm preview-${{ github.head_ref }} || true && \
          docker pull ghcr.io/${{ github.repository }}/t7lab-website:${{ github.head_ref }} && \
          docker run -d --name preview-${{ github.head_ref }} -p 80${{ github.run_number }}:80 ghcr.io/${{ github.repository }}/t7lab-website:${{ github.head_ref }}"

      - name: Configure NGINX for Preview
        run: |
          ssh root@${{ vars.SSH_HOST }} "bash /home/phil/scripts/nginx_configure.sh ${{ github.head_ref }} 80${{ github.run_number }}"

      - name: Add DNS Record in Cloudflare
        run: |
          ssh root@${{ vars.SSH_HOST }} 'curl --request POST \
            --url https://api.cloudflare.com/client/v4/zones/${{ vars.CLOUDFLARE_ZONE }}/dns_records \
            --header "Content-Type: application/json" \
            --header "Authorization: Bearer ${{ secrets.CLOUDFLARE_API_TOKEN }}" \
            --data '{
            "comment": "Domain verification record",
            "name": "${{ github.head_ref }}.preview.t7lab.com",
            "proxied": false,
            "settings": {},
            "tags": [],
            "ttl": 3600,
            "content": "${{ vars.SSH_HOST }}",
            "type": "A"
          }'' \
          | tee /tmp/cf_response

          HTTP_STATUS=$(tail -n1 /tmp/cf_response)
          BODY=$(sed '$ d' /tmp/cf_response)

          if [ "$HTTP_STATUS" -eq 200 ]; then
            SUCCESS=$(echo "$BODY" | jq -r '.success')
            if [ "$SUCCESS" = "true" ]; then
              echo "DNS record created successfully"
            else
              echo "Failed to create DNS record. API response:"
              echo "$BODY"
              exit 1
            fi
          else
            echo "HTTP request failed with status $HTTP_STATUS. Response:"
            echo "$BODY"
            exit 1
          fi
